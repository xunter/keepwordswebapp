@model KeepWords.Models.Account.ChangePasswordModel

@{
    ViewBag.Title = "Change password";
}

@section head {
    <script src="@Url.Content("~/Scripts/sha512.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(function () {
        var $tbCurrentPassword = $("#CurrentPassword"),
            $tbNewPassword = $("#NewPassword"),
            $tbNewPasswordReply = $("#NewPasswordReply"),
            $hfNewPasswordHash = $("#NewPasswordHash"),
            $hfNewPasswordReplyHash = $("#NewPasswordReplyHash"),
            $hfCurrentPasswordHash = $("#CurrentPasswordHash"),
            $hfNewPasswordLength = $("#NewPasswordLength"),
            $bSubmit = $("#bSubmit");

        $bSubmit.click(function () {
            var password = $tbCurrentPassword.val(),
                newPassword = $tbNewPassword.val();

            $hfNewPasswordLength.val(newPassword.length);

            computeHashForPasswordField($tbCurrentPassword, $hfCurrentPasswordHash);
            computeHashForPasswordField($tbNewPassword, $hfNewPasswordHash);
            computeHashForPasswordField($tbNewPasswordReply, $hfNewPasswordReplyHash);

            $tbCurrentPassword.val("");
            $tbNewPassword.val("");
            $tbNewPasswordReply.val("");
        });

        function computeHashForPasswordField($tbPassword, $hfHash) {
            var pwd = $tbPassword.val();
            if (!pwd) return "";
            var 
                sha = new window.jsSHA(pwd, "ASCII"),
                pwdHash = sha.getHash("SHA-512", "HEX");
            $hfHash.val(pwdHash);
            $tbPassword.val("");
            return pwdHash;
        };
    });
</script>
}


@using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post, new Dictionary<string, object> { { "class", "well" } }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.EditorForModel()
    
    <button id="bSubmit" type="submit" class="btn btn-primary">Save</button>
}
